{"ast":null,"code":"var _jsxFileName = \"/Users/devansh.madd/Downloads/gistapi-main/Gistapi/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyles from './GlobalStyle';\nimport Header from './components/Header';\nimport GistList from './components/GistList';\nimport { getPublicGists, getGistForUser } from './services/gistService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [gists, setGists] = useState([]);\n  const [displayGists, setDisplayGists] = useState([]);\n  const [username, setUsername] = useState('');\n\n  const usernameCallBack = username => setUsername(username); // only runs one time when component is mounted\n\n\n  useEffect(() => getPublicGists().then(res => res.data).then(gists => {\n    setGists(gists);\n    setDisplayGists(gists);\n  }).then(() => console.log('Public Gists Fetched!')), []);\n  useEffect(() => {\n    if (username) {\n      const filteredGists = gists.filter(gist => {\n        let re = new RegExp(username, 'i');\n        return re.test(gist.owner.login);\n      });\n      setDisplayGists(filteredGists);\n    }\n  }, [username]);\n  useEffect(() => console.log(gists), [gists]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    className: \"App\",\n    \"data-testid\": \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      usernameCallBack: usernameCallBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GistList, {\n      gists: displayGists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vRm3eLftArDFkLn9ASLuB3s6EHM=\");\n\n_c = App;\nconst Wrapper = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n`;\n_c2 = Wrapper;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"sources":["/Users/devansh.madd/Downloads/gistapi-main/Gistapi/src/App.js"],"names":["useState","useEffect","styled","GlobalStyles","Header","GistList","getPublicGists","getGistForUser","App","gists","setGists","displayGists","setDisplayGists","username","setUsername","usernameCallBack","then","res","data","console","log","filteredGists","filter","gist","re","RegExp","test","owner","login","Wrapper","div"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,wBAA/C;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMe,gBAAgB,GAAGF,QAAQ,IAAIC,WAAW,CAACD,QAAD,CAAhD,CAJgB,CAMhB;;;AACAZ,EAAAA,SAAS,CACP,MACEK,cAAc,GACXU,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IADnB,EAEGF,IAFH,CAEQP,KAAK,IAAI;AACbC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,eAAe,CAACH,KAAD,CAAf;AACD,GALH,EAMGO,IANH,CAMQ,MAAMG,OAAO,CAACC,GAAR,CAAY,uBAAZ,CANd,CAFK,EASP,EATO,CAAT;AAaAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,QAAJ,EAAc;AACZ,YAAMQ,aAAa,GAAGZ,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAI;AACzC,YAAIC,EAAE,GAAG,IAAIC,MAAJ,CAAWZ,QAAX,EAAqB,GAArB,CAAT;AACA,eAAOW,EAAE,CAACE,IAAH,CAAQH,IAAI,CAACI,KAAL,CAAWC,KAAnB,CAAP;AACD,OAHqB,CAAtB;AAIAhB,MAAAA,eAAe,CAACS,aAAD,CAAf;AAED;AACF,GATQ,EASN,CAACR,QAAD,CATM,CAAT;AAWAZ,EAAAA,SAAS,CAAC,MAAMkB,OAAO,CAACC,GAAR,CAAYX,KAAZ,CAAP,EAA2B,CAACA,KAAD,CAA3B,CAAT;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAyB,mBAAY,KAArC;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,gBAAgB,EAAEM;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxCD;;GAAMH,G;;KAAAA,G;AA0CN,MAAMqB,OAAO,GAAG3B,MAAM,CAAC4B,GAAI;AAC3B;AACA;AACA,CAHA;MAAMD,O;AAKN,eAAerB,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport GlobalStyles from './GlobalStyle';\n\nimport Header from './components/Header';\nimport GistList from './components/GistList';\n\nimport { getPublicGists, getGistForUser } from './services/gistService';\n\nconst App = () => {\n  const [gists, setGists] = useState([]);\n  const [displayGists, setDisplayGists] = useState([]);\n  const [username, setUsername] = useState('');\n  const usernameCallBack = username => setUsername(username);\n\n  // only runs one time when component is mounted\n  useEffect(\n    () =>\n      getPublicGists()\n        .then(res => res.data)\n        .then(gists => {\n          setGists(gists);\n          setDisplayGists(gists);\n        })\n        .then(() => console.log('Public Gists Fetched!')),\n    []\n  );\n\n\n  useEffect(() => {\n    if (username) {\n      const filteredGists = gists.filter(gist => {\n        let re = new RegExp(username, 'i');\n        return re.test(gist.owner.login);\n      });\n      setDisplayGists(filteredGists);\n\n    }\n  }, [username]);\n\n  useEffect(() => console.log(gists), [gists]);\n\n  return (\n    <Wrapper className=\"App\" data-testid=\"app\">\n      <Header usernameCallBack={usernameCallBack} />\n      <GistList gists={displayGists} />\n      <GlobalStyles />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  font-size: 14px;\n  line-height: 1.5;\n`;\n\nexport default App;"]},"metadata":{},"sourceType":"module"}