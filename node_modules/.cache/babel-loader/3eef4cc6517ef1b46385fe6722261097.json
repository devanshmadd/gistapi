{"ast":null,"code":"var _jsxFileName = \"/Users/devansh.madd/Downloads/gistapi-main/src/components/GistList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { act } from 'react-dom/test-utils';\nimport { Octokit } from \"@octokit/rest\";\nimport { CodeIcon, RepoForkedIcon, CommentIcon, StarFillIcon, FileIcon } from '@primer/octicons-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst octokit = new Octokit();\n\nconst GistList = props => {\n  _s();\n\n  const [gists, setGists] = useState([]);\n  useEffect(() => {\n    async function getGists() {\n      const node = this.textInput;\n      node.value = 'giraffe';\n      ReactTestUtils.Simulate.change(node);\n      ReactTestUtils.Simulate.keyDown(node, {\n        key: \"Enter\",\n        keyCode: 13,\n        which: 13\n      });\n      console.log(await octokit.rest.gists.listForUser({\n        username: props.username\n      }));\n    }\n\n    if (props.username) {\n      getGists();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [\"thbthb\", /*#__PURE__*/_jsxDEV(CodeIcon, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), \"    \", /*#__PURE__*/_jsxDEV(RepoForkedIcon, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 39\n    }, this), \"   \", /*#__PURE__*/_jsxDEV(CommentIcon, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 70\n    }, this), \" \", /*#__PURE__*/_jsxDEV(StarFillIcon, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 95\n    }, this), \" \", /*#__PURE__*/_jsxDEV(FileIcon, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 121\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GistList, \"yXawY/NJlgoHeyG/BKeUPJPM07Y=\");\n\n_c = GistList;\nexport default GistList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GistList\");","map":{"version":3,"sources":["/Users/devansh.madd/Downloads/gistapi-main/src/components/GistList.js"],"names":["React","useEffect","useState","ReactDOM","act","Octokit","CodeIcon","RepoForkedIcon","CommentIcon","StarFillIcon","FileIcon","octokit","GistList","props","gists","setGists","getGists","node","textInput","value","ReactTestUtils","Simulate","change","keyDown","key","keyCode","which","console","log","rest","listForUser","username"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAAQC,QAAR,EAAiBC,cAAjB,EAAgCC,WAAhC,EAA4CC,YAA5C,EAA0DC,QAA1D,QAAyE,wBAAzE;;AAEA,MAAMC,OAAO,GAAG,IAAIN,OAAJ,EAAhB;;AAEA,MAAMO,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,EAAD,CAAjC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAee,QAAf,GAA0B;AAEtB,YAAMC,IAAI,GAAG,KAAKC,SAAlB;AACAD,MAAAA,IAAI,CAACE,KAAL,GAAa,SAAb;AACAC,MAAAA,cAAc,CAACC,QAAf,CAAwBC,MAAxB,CAA+BL,IAA/B;AACAG,MAAAA,cAAc,CAACC,QAAf,CAAwBE,OAAxB,CAAgCN,IAAhC,EAAsC;AAACO,QAAAA,GAAG,EAAE,OAAN;AAAeC,QAAAA,OAAO,EAAE,EAAxB;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAAtC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAMjB,OAAO,CAACkB,IAAR,CAAaf,KAAb,CAAmBgB,WAAnB,CAA+B;AACjDC,QAAAA,QAAQ,EAAClB,KAAK,CAACkB;AADkC,OAA/B,CAAlB;AAIP;;AAED,QAAGlB,KAAK,CAACkB,QAAT,EAAkB;AAACf,MAAAA,QAAQ;AAAG;AACjC,GAdY,EAeZ,EAfY,CAAT;AAkBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,sCAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFJ,uBAE8B,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,YAF9B,sBAE6D,QAAC,WAAD;AAAa,MAAA,IAAI,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAF7D,oBAEsF,QAAC,YAAD;AAAc,MAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA,YAFtF,oBAEgH,QAAC,QAAD;AAAU,MAAA,IAAI,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFhH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA5BD;;GAAMJ,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { act } from 'react-dom/test-utils';\nimport { Octokit } from \"@octokit/rest\";\nimport {CodeIcon,RepoForkedIcon,CommentIcon,StarFillIcon, FileIcon} from '@primer/octicons-react'\n\nconst octokit = new Octokit();\n\nconst GistList = (props) => {\n\n    const [gists,setGists] = useState([]);\n    useEffect(()=>{\n        async function getGists() {\n            \n            const node = this.textInput;\n            node.value = 'giraffe';\n            ReactTestUtils.Simulate.change(node);\n            ReactTestUtils.Simulate.keyDown(node, {key: \"Enter\", keyCode: 13, which: 13});              \n            console.log(await octokit.rest.gists.listForUser({\n            username:props.username,\n        }))\n        \n    }\n    \n    if(props.username){getGists()}\n}\n,[]);\n\n\n    return (\n        <React.Fragment>\n            thbthb\n            <CodeIcon size={16} />    <RepoForkedIcon size={16} />   <CommentIcon size={16}/> <StarFillIcon size={16}/> <FileIcon size={16}/>\n            \n        </React.Fragment>\n    )\n}\n\nexport default GistList\n"]},"metadata":{},"sourceType":"module"}