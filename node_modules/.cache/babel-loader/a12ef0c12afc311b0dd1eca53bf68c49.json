{"ast":null,"code":"var _jsxFileName = \"/Users/devansh.madd/Downloads/gistapi-main/src/components/GistList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Octokit } from \"@octokit/rest\";\nimport { CodeIcon, RepoForkedIcon, CommentIcon, StarFillIcon, FileIcon } from '@primer/octicons-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst octokit = new Octokit();\n\nconst GistList = ({\n  data\n}) => {\n  _s();\n\n  const [gists, setGists] = useState([]);\n  useEffect(() => {\n    async function getGists() {\n      console.log(await octokit.rest.gists.listForUser({\n        username: props.username\n      }));\n    }\n\n    if (props.username) {\n      getGists();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: gists.map(gist => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: gits.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(GistList, \"yXawY/NJlgoHeyG/BKeUPJPM07Y=\");\n\n_c = GistList;\nexport default GistList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GistList\");","map":{"version":3,"sources":["/Users/devansh.madd/Downloads/gistapi-main/src/components/GistList.js"],"names":["React","useEffect","useState","Octokit","CodeIcon","RepoForkedIcon","CommentIcon","StarFillIcon","FileIcon","octokit","GistList","data","gists","setGists","getGists","console","log","rest","listForUser","username","props","map","gist","gits","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAAQC,QAAR,EAAiBC,cAAjB,EAAgCC,WAAhC,EAA4CC,YAA5C,EAA0DC,QAA1D,QAAyE,wBAAzE;;;AAEA,MAAMC,OAAO,GAAG,IAAIN,OAAJ,EAAhB;;AAGA,MAAMO,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAEzB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBX,QAAQ,CAAC,EAAD,CAAjC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAea,QAAf,GAA0B;AAItBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAMP,OAAO,CAACQ,IAAR,CAAaL,KAAb,CAAmBM,WAAnB,CAA+B;AACjDC,QAAAA,QAAQ,EAACC,KAAK,CAACD;AADkC,OAA/B,CAAlB;AAIP;;AAID,QAAGC,KAAK,CAACD,QAAT,EAAkB;AAACL,MAAAA,QAAQ;AAAG;AACjC,GAdY,EAeZ,EAfY,CAAT;AAoBA,sBACI;AAAA,cACCF,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACb;AAAA,gBAAIC,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YADD;AADD,mBADJ;AAOH,CA9BD;;GAAMd,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Octokit } from \"@octokit/rest\";\nimport {CodeIcon,RepoForkedIcon,CommentIcon,StarFillIcon, FileIcon} from '@primer/octicons-react'\n\nconst octokit = new Octokit();\n\n\nconst GistList = ({data}) => {\n\n    const [gists,setGists] = useState([]);\n    useEffect(()=>{\n        async function getGists() {\n            \n            \n            \n            console.log(await octokit.rest.gists.listForUser({\n            username:props.username,\n        }))\n        \n    }\n\n\n   \n    if(props.username){getGists()}\n}\n,[]);\n\n\n\n\n    return (\n        <>\n        {gists.map(gist => (\n          <p>{gits.url}</p>\n      ))}\n    </>\n    )\n}\n\nexport default GistList\n"]},"metadata":{},"sourceType":"module"}